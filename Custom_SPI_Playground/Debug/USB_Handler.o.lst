   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"USB_Handler.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	glDmaChannelHandle,172,4
  17              		.global	EventName
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 434F4E4E 		.ascii	"CONNECT\000"
  21      45435400 
  22              		.align	2
  23              	.LC1:
  24 0008 44495343 		.ascii	"DISCONNECT\000"
  24      4F4E4E45 
  24      435400
  25 0013 00       		.align	2
  26              	.LC2:
  27 0014 53555350 		.ascii	"SUSPEND\000"
  27      454E4400 
  28              		.align	2
  29              	.LC3:
  30 001c 52455355 		.ascii	"RESUME\000"
  30      4D4500
  31 0023 00       		.align	2
  32              	.LC4:
  33 0024 52455345 		.ascii	"RESET\000"
  33      5400
  34 002a 0000     		.align	2
  35              	.LC5:
  36 002c 5345545F 		.ascii	"SET_CONFIGURATION\000"
  36      434F4E46 
  36      49475552 
  36      4154494F 
  36      4E00
  37 003e 0000     		.align	2
  38              	.LC6:
  39 0040 53504545 		.ascii	"SPEED\000"
  39      4400
  40 0046 0000     		.align	2
  41              	.LC7:
  42 0048 5345545F 		.ascii	"SET_INTERFACE\000"
  42      494E5445 
  42      52464143 
  42      4500
  43 0056 0000     		.align	2
  44              	.LC8:
  45 0058 5345545F 		.ascii	"SET_EXIT_LATENCY\000"
  45      45584954 
  45      5F4C4154 
  45      454E4359 
  45      00
  46 0069 000000   		.align	2
  47              	.LC9:
  48 006c 534F465F 		.ascii	"SOF_ITP\000"
  48      49545000 
  49              		.align	2
  50              	.LC10:
  51 0074 55534552 		.ascii	"USER_EP0_XFER_COMPLETE\000"
  51      5F455030 
  51      5F584645 
  51      525F434F 
  51      4D504C45 
  52 008b 00       		.align	2
  53              	.LC11:
  54 008c 56425553 		.ascii	"VBUS_VALID\000"
  54      5F56414C 
  54      494400
  55 0097 00       		.align	2
  56              	.LC12:
  57 0098 56425553 		.ascii	"VBUS_REMOVED\000"
  57      5F52454D 
  57      4F564544 
  57      00
  58 00a5 000000   		.align	2
  59              	.LC13:
  60 00a8 484F5354 		.ascii	"HOSTMODE_CONNECT\000"
  60      4D4F4445 
  60      5F434F4E 
  60      4E454354 
  60      00
  61 00b9 000000   		.align	2
  62              	.LC14:
  63 00bc 484F5354 		.ascii	"HOSTMODE_DISCONNECT\000"
  63      4D4F4445 
  63      5F444953 
  63      434F4E4E 
  63      45435400 
  64              		.align	2
  65              	.LC15:
  66 00d0 4F54475F 		.ascii	"OTG_CHANGE\000"
  66      4348414E 
  66      474500
  67 00db 00       		.align	2
  68              	.LC16:
  69 00dc 4F54475F 		.ascii	"OTG_VBUS_CHG\000"
  69      56425553 
  69      5F434847 
  69      00
  70 00e9 000000   		.align	2
  71              	.LC17:
  72 00ec 4F54475F 		.ascii	"OTG_SRP\000"
  72      53525000 
  73              		.align	2
  74              	.LC18:
  75 00f4 45505F55 		.ascii	"EP_UNDERRUN\000"
  75      4E444552 
  75      52554E00 
  76              		.align	2
  77              	.LC19:
  78 0100 4C494E4B 		.ascii	"LINK_RECOVERY\000"
  78      5F524543 
  78      4F564552 
  78      5900
  79 010e 0000     		.align	2
  80              	.LC20:
  81 0110 55534233 		.ascii	"USB3_LINKFAIL\000"
  81      5F4C494E 
  81      4B464149 
  81      4C00
  82 011e 0000     		.align	2
  83              	.LC21:
  84 0120 53535F43 		.ascii	"SS_COMP_ENTRY\000"
  84      4F4D505F 
  84      454E5452 
  84      5900
  85 012e 0000     		.align	2
  86              	.LC22:
  87 0130 53535F43 		.ascii	"SS_COMP_EXIT\000"
  87      4F4D505F 
  87      45584954 
  87      00
  88              		.section	.data.EventName,"aw",%progbits
  89              		.align	2
  92              	EventName:
  93 0000 00000000 		.word	.LC0
  94 0004 08000000 		.word	.LC1
  95 0008 14000000 		.word	.LC2
  96 000c 1C000000 		.word	.LC3
  97 0010 24000000 		.word	.LC4
  98 0014 2C000000 		.word	.LC5
  99 0018 40000000 		.word	.LC6
 100 001c 48000000 		.word	.LC7
 101 0020 58000000 		.word	.LC8
 102 0024 6C000000 		.word	.LC9
 103 0028 74000000 		.word	.LC10
 104 002c 8C000000 		.word	.LC11
 105 0030 98000000 		.word	.LC12
 106 0034 A8000000 		.word	.LC13
 107 0038 BC000000 		.word	.LC14
 108 003c D0000000 		.word	.LC15
 109 0040 DC000000 		.word	.LC16
 110 0044 EC000000 		.word	.LC17
 111 0048 F4000000 		.word	.LC18
 112 004c 00010000 		.word	.LC19
 113 0050 10010000 		.word	.LC20
 114 0054 20010000 		.word	.LC21
 115 0058 30010000 		.word	.LC22
 116              		.section	.text.USBSetupCallback,"ax",%progbits
 117              		.align	2
 118              		.global	USBSetupCallback
 120              	USBSetupCallback:
 121              	.LFB0:
 122              		.file 1 "../USB_Handler.c"
   1:../USB_Handler.c **** /*
   2:../USB_Handler.c ****  * USB Handler.c
   3:../USB_Handler.c ****  *
   4:../USB_Handler.c ****  */
   5:../USB_Handler.c **** 
   6:../USB_Handler.c **** #include "Application.h"
   7:../USB_Handler.c **** 
   8:../USB_Handler.c **** // Declare external data
   9:../USB_Handler.c **** CyU3PDmaChannel glDmaChannelHandle;
  10:../USB_Handler.c **** 
  11:../USB_Handler.c **** // Declare external functions
  12:../USB_Handler.c **** extern void CheckStatus(char* StringPtr, CyU3PReturnStatus_t Status);
  13:../USB_Handler.c **** extern void StartApplication(void);
  14:../USB_Handler.c **** extern void StopApplication(void);
  15:../USB_Handler.c **** extern CyBool_t ApplicationIsActive(void);
  16:../USB_Handler.c **** CyU3PReturnStatus_t SetUSBdescriptors(void);
  17:../USB_Handler.c **** 
  18:../USB_Handler.c **** // For Debug and education display the name of the Event
  19:../USB_Handler.c **** const char* EventName[] = {
  20:../USB_Handler.c **** #if (VERBOSE)
  21:../USB_Handler.c **** 	    "CONNECT", "DISCONNECT", "SUSPEND", "RESUME", "RESET", "SET_CONFIGURATION", "SPEED",
  22:../USB_Handler.c **** 	    "SET_INTERFACE", "SET_EXIT_LATENCY", "SOF_ITP", "USER_EP0_XFER_COMPLETE", "VBUS_VALID",
  23:../USB_Handler.c **** 	    "VBUS_REMOVED", "HOSTMODE_CONNECT", "HOSTMODE_DISCONNECT", "OTG_CHANGE", "OTG_VBUS_CHG",
  24:../USB_Handler.c **** 	    "OTG_SRP", "EP_UNDERRUN", "LINK_RECOVERY", "USB3_LINKFAIL", "SS_COMP_ENTRY", "SS_COMP_EXIT"
  25:../USB_Handler.c **** #endif
  26:../USB_Handler.c **** };
  27:../USB_Handler.c **** 
  28:../USB_Handler.c **** /* Callback to handle the USB setup requests. */
  29:../USB_Handler.c **** CyBool_t USBSetupCallback(uint32_t setupdat0, uint32_t setupdat1)
  30:../USB_Handler.c **** {
 123              		.loc 1 30 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 24
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 00482DE9 		stmfd	sp!, {fp, lr}
 128              	.LCFI0:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 11, -8
 131              		.cfi_offset 14, -4
 132 0004 04B08DE2 		add	fp, sp, #4
 133              	.LCFI1:
 134              		.cfi_def_cfa 11, 4
 135 0008 18D04DE2 		sub	sp, sp, #24
 136 000c 18000BE5 		str	r0, [fp, #-24]
 137 0010 1C100BE5 		str	r1, [fp, #-28]
  31:../USB_Handler.c **** 	CyBool_t isHandled = CyFalse;
 138              		.loc 1 31 0
 139 0014 0030A0E3 		mov	r3, #0
 140 0018 08300BE5 		str	r3, [fp, #-8]
  32:../USB_Handler.c **** 	union { uint32_t SetupData[2];
  33:../USB_Handler.c **** //			uint8_t RawBytes[8];
  34:../USB_Handler.c **** 			struct { uint8_t Target:5; uint8_t Type:2; uint8_t Direction:1;
  35:../USB_Handler.c **** 				 	 uint8_t Request; uint16_t Value; uint16_t Index; uint16_t Length; };
  36:../USB_Handler.c **** 		  } Setup;
  37:../USB_Handler.c **** 	// Copy the incoming Setup Packet into my Setup union which will "unpack" the variables
  38:../USB_Handler.c **** 	Setup.SetupData[0] = setupdat0;
 141              		.loc 1 38 0
 142 001c 18301BE5 		ldr	r3, [fp, #-24]
 143 0020 10300BE5 		str	r3, [fp, #-16]
  39:../USB_Handler.c **** 	Setup.SetupData[1] = setupdat1;
 144              		.loc 1 39 0
 145 0024 1C301BE5 		ldr	r3, [fp, #-28]
 146 0028 0C300BE5 		str	r3, [fp, #-12]
  40:../USB_Handler.c **** 
  41:../USB_Handler.c ****     if (Setup.Type == CY_U3P_USB_STANDARD_RQT)
 147              		.loc 1 41 0
 148 002c 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 149 0030 A332A0E1 		mov	r3, r3, lsr #5
 150 0034 033003E2 		and	r3, r3, #3
 151 0038 FF3003E2 		and	r3, r3, #255
 152 003c 000053E3 		cmp	r3, #0
 153 0040 4400001A 		bne	.L2
  42:../USB_Handler.c ****     {
  43:../USB_Handler.c ****         /* Handle SET_FEATURE(FUNCTION_SUSPEND) and CLEAR_FEATURE(FUNCTION_SUSPEND)
  44:../USB_Handler.c ****          * requests here. It should be allowed to pass if the device is in configured
  45:../USB_Handler.c ****          * state and failed otherwise. */
  46:../USB_Handler.c ****         if ((Setup.Target == CY_U3P_USB_TARGET_INTF) && ((Setup.Request == CY_U3P_USB_SC_SET_FEATUR
 154              		.loc 1 46 0
 155 0044 10305BE5 		ldrb	r3, [fp, #-16]
 156 0048 1F3003E2 		and	r3, r3, #31
 157 004c FF3003E2 		and	r3, r3, #255
 158 0050 010053E3 		cmp	r3, #1
 159 0054 1400001A 		bne	.L3
 160              		.loc 1 46 0 is_stmt 0 discriminator 1
 161 0058 0F305BE5 		ldrb	r3, [fp, #-15]	@ zero_extendqisi2
 162 005c 030053E3 		cmp	r3, #3
 163 0060 0200000A 		beq	.L4
  47:../USB_Handler.c ****                     || (Setup.Request == CY_U3P_USB_SC_CLEAR_FEATURE)) && (Setup.Value == 0))
 164              		.loc 1 47 0 is_stmt 1
 165 0064 0F305BE5 		ldrb	r3, [fp, #-15]	@ zero_extendqisi2
 166 0068 010053E3 		cmp	r3, #1
 167 006c 0E00001A 		bne	.L3
 168              	.L4:
 169              		.loc 1 47 0 is_stmt 0 discriminator 1
 170 0070 BE305BE1 		ldrh	r3, [fp, #-14]
 171 0074 000053E3 		cmp	r3, #0
 172 0078 0B00001A 		bne	.L3
  48:../USB_Handler.c ****         {
  49:../USB_Handler.c ****             if (ApplicationIsActive()) CyU3PUsbAckSetup();
 173              		.loc 1 49 0 is_stmt 1
 174 007c FEFFFFEB 		bl	ApplicationIsActive
 175 0080 0030A0E1 		mov	r3, r0
 176 0084 000053E3 		cmp	r3, #0
 177 0088 0100000A 		beq	.L5
 178              		.loc 1 49 0 is_stmt 0 discriminator 1
 179 008c FEFFFFEB 		bl	CyU3PUsbAckSetup
 180 0090 030000EA 		b	.L6
 181              	.L5:
  50:../USB_Handler.c ****             else CyU3PUsbStall(0, CyTrue, CyFalse);
 182              		.loc 1 50 0 is_stmt 1
 183 0094 0000A0E3 		mov	r0, #0
 184 0098 0110A0E3 		mov	r1, #1
 185 009c 0020A0E3 		mov	r2, #0
 186 00a0 FEFFFFEB 		bl	CyU3PUsbStall
 187              	.L6:
  51:../USB_Handler.c ****             isHandled = CyTrue;
 188              		.loc 1 51 0
 189 00a4 0130A0E3 		mov	r3, #1
 190 00a8 08300BE5 		str	r3, [fp, #-8]
 191              	.L3:
  52:../USB_Handler.c ****         }
  53:../USB_Handler.c **** 
  54:../USB_Handler.c ****         /* CLEAR_FEATURE request for endpoint is always passed to the setup callback
  55:../USB_Handler.c ****          * regardless of the enumeration model used. When a clear feature is received,
  56:../USB_Handler.c ****          * the previous transfer has to be flushed and cleaned up. This is done at the
  57:../USB_Handler.c ****          * protocol level. Since this is just a loopback operation, there is no higher
  58:../USB_Handler.c ****          * level protocol. So flush the EP memory and reset the DMA channel associated
  59:../USB_Handler.c ****          * with it. If there are more than one EP associated with the channel reset both
  60:../USB_Handler.c ****          * the EPs. The endpoint stall and toggle / sequence number is also expected to be
  61:../USB_Handler.c ****          * reset. Return CyFalse to make the library clear the stall and reset the endpoint
  62:../USB_Handler.c ****          * toggle. Or invoke the CyU3PUsbStall (ep, CyFalse, CyTrue) and return CyTrue.
  63:../USB_Handler.c ****          * Here we are clearing the stall. */
  64:../USB_Handler.c ****         if ((Setup.Target == CY_U3P_USB_TARGET_ENDPT) && (Setup.Request == CY_U3P_USB_SC_CLEAR_FEAT
 192              		.loc 1 64 0
 193 00ac 10305BE5 		ldrb	r3, [fp, #-16]
 194 00b0 1F3003E2 		and	r3, r3, #31
 195 00b4 FF3003E2 		and	r3, r3, #255
 196 00b8 020053E3 		cmp	r3, #2
 197 00bc 2500001A 		bne	.L2
 198              		.loc 1 64 0 is_stmt 0 discriminator 1
 199 00c0 0F305BE5 		ldrb	r3, [fp, #-15]	@ zero_extendqisi2
 200 00c4 010053E3 		cmp	r3, #1
 201 00c8 2200001A 		bne	.L2
  65:../USB_Handler.c ****                 && (Setup.Value == CY_U3P_USBX_FS_EP_HALT))
 202              		.loc 1 65 0 is_stmt 1
 203 00cc BE305BE1 		ldrh	r3, [fp, #-14]
 204 00d0 000053E3 		cmp	r3, #0
 205 00d4 1F00001A 		bne	.L2
  66:../USB_Handler.c ****         {
  67:../USB_Handler.c ****             if ((Setup.Index == EP_PRODUCER) || (Setup.Index == EP_CONSUMER))
 206              		.loc 1 67 0
 207 00d8 BC305BE1 		ldrh	r3, [fp, #-12]
 208 00dc 010053E3 		cmp	r3, #1
 209 00e0 0200000A 		beq	.L7
 210              		.loc 1 67 0 is_stmt 0 discriminator 1
 211 00e4 BC305BE1 		ldrh	r3, [fp, #-12]
 212 00e8 810053E3 		cmp	r3, #129
 213 00ec 1900001A 		bne	.L2
 214              	.L7:
  68:../USB_Handler.c ****             {
  69:../USB_Handler.c ****                 if (ApplicationIsActive())
 215              		.loc 1 69 0 is_stmt 1
 216 00f0 FEFFFFEB 		bl	ApplicationIsActive
 217 00f4 0030A0E1 		mov	r3, r0
 218 00f8 000053E3 		cmp	r3, #0
 219 00fc 1500000A 		beq	.L2
  70:../USB_Handler.c ****                 {
  71:../USB_Handler.c ****                     CyU3PDmaChannelReset(&glDmaChannelHandle);
 220              		.loc 1 71 0
 221 0100 60009FE5 		ldr	r0, .L9
 222 0104 FEFFFFEB 		bl	CyU3PDmaChannelReset
  72:../USB_Handler.c ****                     CyU3PUsbFlushEp(EP_PRODUCER);
 223              		.loc 1 72 0
 224 0108 0100A0E3 		mov	r0, #1
 225 010c FEFFFFEB 		bl	CyU3PUsbFlushEp
  73:../USB_Handler.c ****                     CyU3PUsbResetEp(EP_PRODUCER);
 226              		.loc 1 73 0
 227 0110 0100A0E3 		mov	r0, #1
 228 0114 FEFFFFEB 		bl	CyU3PUsbResetEp
  74:../USB_Handler.c ****                     CyU3PUsbFlushEp(EP_CONSUMER);
 229              		.loc 1 74 0
 230 0118 8100A0E3 		mov	r0, #129
 231 011c FEFFFFEB 		bl	CyU3PUsbFlushEp
  75:../USB_Handler.c ****                     CyU3PUsbResetEp(EP_CONSUMER);
 232              		.loc 1 75 0
 233 0120 8100A0E3 		mov	r0, #129
 234 0124 FEFFFFEB 		bl	CyU3PUsbResetEp
  76:../USB_Handler.c ****                     CyU3PDmaChannelSetXfer(&glDmaChannelHandle, 0);
 235              		.loc 1 76 0
 236 0128 38009FE5 		ldr	r0, .L9
 237 012c 0010A0E3 		mov	r1, #0
 238 0130 FEFFFFEB 		bl	CyU3PDmaChannelSetXfer
  77:../USB_Handler.c ****                     CyU3PUsbStall(Setup.Index, CyFalse, CyTrue);
 239              		.loc 1 77 0
 240 0134 BC305BE1 		ldrh	r3, [fp, #-12]
 241 0138 FF3003E2 		and	r3, r3, #255
 242 013c 0300A0E1 		mov	r0, r3
 243 0140 0010A0E3 		mov	r1, #0
 244 0144 0120A0E3 		mov	r2, #1
 245 0148 FEFFFFEB 		bl	CyU3PUsbStall
  78:../USB_Handler.c ****                     CyU3PUsbAckSetup();
 246              		.loc 1 78 0
 247 014c FEFFFFEB 		bl	CyU3PUsbAckSetup
  79:../USB_Handler.c ****                     isHandled = CyTrue;
 248              		.loc 1 79 0
 249 0150 0130A0E3 		mov	r3, #1
 250 0154 08300BE5 		str	r3, [fp, #-8]
 251              	.L2:
  80:../USB_Handler.c ****                 }
  81:../USB_Handler.c ****             }
  82:../USB_Handler.c ****         }
  83:../USB_Handler.c ****     }
  84:../USB_Handler.c **** 
  85:../USB_Handler.c ****     return isHandled;
 252              		.loc 1 85 0
 253 0158 08301BE5 		ldr	r3, [fp, #-8]
  86:../USB_Handler.c **** }
 254              		.loc 1 86 0
 255 015c 0300A0E1 		mov	r0, r3
 256 0160 04D04BE2 		sub	sp, fp, #4
 257              		@ sp needed
 258 0164 0088BDE8 		ldmfd	sp!, {fp, pc}
 259              	.L10:
 260              		.align	2
 261              	.L9:
 262 0168 00000000 		.word	glDmaChannelHandle
 263              		.cfi_endproc
 264              	.LFE0:
 266              		.section	.rodata
 267 013d 000000   		.align	2
 268              	.LC23:
 269 0140 0D0A4576 		.ascii	"\015\012Event received = %s\000"
 269      656E7420 
 269      72656365 
 269      69766564 
 269      203D2025 
 270              		.section	.text.USBEventCallback,"ax",%progbits
 271              		.align	2
 272              		.global	USBEventCallback
 274              	USBEventCallback:
 275              	.LFB1:
  87:../USB_Handler.c **** 
  88:../USB_Handler.c **** /* This is the callback function to handle the USB events. */
  89:../USB_Handler.c **** void USBEventCallback(CyU3PUsbEventType_t EventType, uint16_t EventData)
  90:../USB_Handler.c **** {
 276              		.loc 1 90 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 00482DE9 		stmfd	sp!, {fp, lr}
 281              	.LCFI2:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 11, -8
 284              		.cfi_offset 14, -4
 285 0004 04B08DE2 		add	fp, sp, #4
 286              	.LCFI3:
 287              		.cfi_def_cfa 11, 4
 288 0008 08D04DE2 		sub	sp, sp, #8
 289 000c 0020A0E1 		mov	r2, r0
 290 0010 0130A0E1 		mov	r3, r1
 291 0014 05204BE5 		strb	r2, [fp, #-5]
 292 0018 B8304BE1 		strh	r3, [fp, #-8]	@ movhi
  91:../USB_Handler.c **** 	DebugPrint(4, "\r\nEvent received = %s", EventName[EventType]);
 293              		.loc 1 91 0
 294 001c 05205BE5 		ldrb	r2, [fp, #-5]	@ zero_extendqisi2
 295 0020 70309FE5 		ldr	r3, .L19
 296 0024 023193E7 		ldr	r3, [r3, r2, asl #2]
 297 0028 0400A0E3 		mov	r0, #4
 298 002c 68109FE5 		ldr	r1, .L19+4
 299 0030 0320A0E1 		mov	r2, r3
 300 0034 FEFFFFEB 		bl	CyU3PDebugPrint
  92:../USB_Handler.c ****     switch (EventType)
 301              		.loc 1 92 0
 302 0038 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 303 003c 040053E3 		cmp	r3, #4
 304 0040 0B00000A 		beq	.L13
 305 0044 050053E3 		cmp	r3, #5
 306 0048 0200000A 		beq	.L14
 307 004c 010053E3 		cmp	r3, #1
 308 0050 0700000A 		beq	.L13
  93:../USB_Handler.c ****     {
  94:../USB_Handler.c ****         case CY_U3P_USB_EVENT_SETCONF:
  95:../USB_Handler.c ****             /* Stop the application before re-starting. */
  96:../USB_Handler.c ****             if (ApplicationIsActive()) StopApplication();
  97:../USB_Handler.c ****             StartApplication();
  98:../USB_Handler.c ****             break;
  99:../USB_Handler.c **** 
 100:../USB_Handler.c ****         case CY_U3P_USB_EVENT_RESET:
 101:../USB_Handler.c ****         case CY_U3P_USB_EVENT_DISCONNECT:
 102:../USB_Handler.c ****             if (ApplicationIsActive()) StopApplication();
 103:../USB_Handler.c ****             break;
 104:../USB_Handler.c **** 
 105:../USB_Handler.c ****         default:
 106:../USB_Handler.c ****             break;
 309              		.loc 1 106 0
 310 0054 0D0000EA 		b	.L11
 311              	.L14:
  96:../USB_Handler.c ****             StartApplication();
 312              		.loc 1 96 0
 313 0058 FEFFFFEB 		bl	ApplicationIsActive
 314 005c 0030A0E1 		mov	r3, r0
 315 0060 000053E3 		cmp	r3, #0
 316 0064 0000000A 		beq	.L15
  96:../USB_Handler.c ****             StartApplication();
 317              		.loc 1 96 0 is_stmt 0 discriminator 1
 318 0068 FEFFFFEB 		bl	StopApplication
 319              	.L15:
  97:../USB_Handler.c ****             break;
 320              		.loc 1 97 0 is_stmt 1
 321 006c FEFFFFEB 		bl	StartApplication
  98:../USB_Handler.c **** 
 322              		.loc 1 98 0
 323 0070 060000EA 		b	.L11
 324              	.L13:
 102:../USB_Handler.c ****             break;
 325              		.loc 1 102 0
 326 0074 FEFFFFEB 		bl	ApplicationIsActive
 327 0078 0030A0E1 		mov	r3, r0
 328 007c 000053E3 		cmp	r3, #0
 329 0080 0100000A 		beq	.L17
 102:../USB_Handler.c ****             break;
 330              		.loc 1 102 0 is_stmt 0 discriminator 1
 331 0084 FEFFFFEB 		bl	StopApplication
 103:../USB_Handler.c **** 
 332              		.loc 1 103 0 is_stmt 1 discriminator 1
 333 0088 FFFFFFEA 		b	.L18
 334              	.L17:
 335              	.L18:
 103:../USB_Handler.c **** 
 336              		.loc 1 103 0 is_stmt 0
 337 008c 0000A0E1 		mov	r0, r0	@ nop
 338              	.L11:
 107:../USB_Handler.c ****     }
 108:../USB_Handler.c **** }
 339              		.loc 1 108 0 is_stmt 1
 340 0090 04D04BE2 		sub	sp, fp, #4
 341              		@ sp needed
 342 0094 0088BDE8 		ldmfd	sp!, {fp, pc}
 343              	.L20:
 344              		.align	2
 345              	.L19:
 346 0098 00000000 		.word	EventName
 347 009c 40010000 		.word	.LC23
 348              		.cfi_endproc
 349              	.LFE1:
 351              		.section	.text.LPMRequestCallback,"ax",%progbits
 352              		.align	2
 353              		.global	LPMRequestCallback
 355              	LPMRequestCallback:
 356              	.LFB2:
 109:../USB_Handler.c **** 
 110:../USB_Handler.c **** // This application does not have any state in which we should not allow U1/U2 transitions, therefo
 111:../USB_Handler.c **** CyBool_t LPMRequestCallback(CyU3PUsbLinkPowerMode link_mode)
 112:../USB_Handler.c **** {
 357              		.loc 1 112 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 8
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 04B02DE5 		str	fp, [sp, #-4]!
 363              	.LCFI4:
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 11, -4
 366 0004 00B08DE2 		add	fp, sp, #0
 367              	.LCFI5:
 368              		.cfi_def_cfa_register 11
 369 0008 0CD04DE2 		sub	sp, sp, #12
 370 000c 0030A0E1 		mov	r3, r0
 371 0010 05304BE5 		strb	r3, [fp, #-5]
 113:../USB_Handler.c ****     return CyTrue;
 372              		.loc 1 113 0
 373 0014 0130A0E3 		mov	r3, #1
 114:../USB_Handler.c **** }
 374              		.loc 1 114 0
 375 0018 0300A0E1 		mov	r0, r3
 376 001c 00D04BE2 		sub	sp, fp, #0
 377              		@ sp needed
 378 0020 04B09DE4 		ldr	fp, [sp], #4
 379 0024 1EFF2FE1 		bx	lr
 380              		.cfi_endproc
 381              	.LFE2:
 383              		.section	.rodata
 384 0156 0000     		.align	2
 385              	.LC24:
 386 0158 53746172 		.ascii	"Start USB driver\000"
 386      74205553 
 386      42206472 
 386      69766572 
 386      00
 387 0169 000000   		.align	2
 388              	.LC25:
 389 016c 53657420 		.ascii	"Set USB Descriptors\000"
 389      55534220 
 389      44657363 
 389      72697074 
 389      6F727300 
 390              		.section	.text.InitializeUSB,"ax",%progbits
 391              		.align	2
 392              		.global	InitializeUSB
 394              	InitializeUSB:
 395              	.LFB3:
 115:../USB_Handler.c **** 
 116:../USB_Handler.c **** // Spin up USB, let the USB driver handle enumeration
 117:../USB_Handler.c **** CyU3PReturnStatus_t InitializeUSB(void)
 118:../USB_Handler.c **** {
 396              		.loc 1 118 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 8
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400 0000 00482DE9 		stmfd	sp!, {fp, lr}
 401              	.LCFI6:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 11, -8
 404              		.cfi_offset 14, -4
 405 0004 04B08DE2 		add	fp, sp, #4
 406              	.LCFI7:
 407              		.cfi_def_cfa 11, 4
 408 0008 08D04DE2 		sub	sp, sp, #8
 119:../USB_Handler.c ****     CyU3PReturnStatus_t Status;
 120:../USB_Handler.c **** 
 121:../USB_Handler.c ****     // Spin up the USB Driver
 122:../USB_Handler.c ****     Status = CyU3PUsbStart();
 409              		.loc 1 122 0
 410 000c FEFFFFEB 		bl	CyU3PUsbStart
 411 0010 08000BE5 		str	r0, [fp, #-8]
 123:../USB_Handler.c ****     CheckStatus("Start USB driver", Status);
 412              		.loc 1 123 0
 413 0014 54009FE5 		ldr	r0, .L25
 414 0018 08101BE5 		ldr	r1, [fp, #-8]
 415 001c FEFFFFEB 		bl	CheckStatus
 124:../USB_Handler.c ****     // Let the driver handle most of the enumeration
 125:../USB_Handler.c ****     // I need to handle unknown class and vendor requests
 126:../USB_Handler.c **** 	// Setup callbacks to handle the setup requests, USB Events and LPM Requests (for USB 3.0)
 127:../USB_Handler.c ****     CyU3PUsbRegisterSetupCallback(USBSetupCallback, CyTrue);
 416              		.loc 1 127 0
 417 0020 4C009FE5 		ldr	r0, .L25+4
 418 0024 0110A0E3 		mov	r1, #1
 419 0028 FEFFFFEB 		bl	CyU3PUsbRegisterSetupCallback
 128:../USB_Handler.c ****     CyU3PUsbRegisterLPMRequestCallback(LPMRequestCallback);
 420              		.loc 1 128 0
 421 002c 44009FE5 		ldr	r0, .L25+8
 422 0030 FEFFFFEB 		bl	CyU3PUsbRegisterLPMRequestCallback
 129:../USB_Handler.c ****     CyU3PUsbRegisterEventCallback(USBEventCallback);
 423              		.loc 1 129 0
 424 0034 40009FE5 		ldr	r0, .L25+12
 425 0038 FEFFFFEB 		bl	CyU3PUsbRegisterEventCallback
 130:../USB_Handler.c **** 
 131:../USB_Handler.c ****     // Driver needs all of the descriptors so it can supply them to the host when requested
 132:../USB_Handler.c ****     Status = SetUSBdescriptors();
 426              		.loc 1 132 0
 427 003c FEFFFFEB 		bl	SetUSBdescriptors
 428 0040 08000BE5 		str	r0, [fp, #-8]
 133:../USB_Handler.c ****     CheckStatus("Set USB Descriptors", Status);
 429              		.loc 1 133 0
 430 0044 34009FE5 		ldr	r0, .L25+16
 431 0048 08101BE5 		ldr	r1, [fp, #-8]
 432 004c FEFFFFEB 		bl	CheckStatus
 134:../USB_Handler.c **** 
 135:../USB_Handler.c ****     /* Connect the USB Pins with super speed operation enabled. */
 136:../USB_Handler.c ****     Status = CyU3PConnectState(CyTrue, CyTrue);
 433              		.loc 1 136 0
 434 0050 0100A0E3 		mov	r0, #1
 435 0054 0110A0E3 		mov	r1, #1
 436 0058 FEFFFFEB 		bl	CyU3PConnectState
 437 005c 08000BE5 		str	r0, [fp, #-8]
 137:../USB_Handler.c **** 
 138:../USB_Handler.c **** 	return Status;
 438              		.loc 1 138 0
 439 0060 08301BE5 		ldr	r3, [fp, #-8]
 139:../USB_Handler.c **** }
 440              		.loc 1 139 0
 441 0064 0300A0E1 		mov	r0, r3
 442 0068 04D04BE2 		sub	sp, fp, #4
 443              		@ sp needed
 444 006c 0088BDE8 		ldmfd	sp!, {fp, pc}
 445              	.L26:
 446              		.align	2
 447              	.L25:
 448 0070 58010000 		.word	.LC24
 449 0074 00000000 		.word	USBSetupCallback
 450 0078 00000000 		.word	LPMRequestCallback
 451 007c 00000000 		.word	USBEventCallback
 452 0080 6C010000 		.word	.LC25
 453              		.cfi_endproc
 454              	.LFE3:
 456              		.text
 457              	.Letext0:
 458              		.file 2 "c:\\program files (x86)\\cypress\\ez-usb fx3 sdk\\1.3\\arm gcc\\arm-none-eabi\\include\\s
 459              		.file 3 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\/firmware/u3p_firmware/inc/cyu3typ
 460              		.file 4 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\/firmware/u3p_firmware/inc/tx_port
 461              		.file 5 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\/firmware/u3p_firmware/inc/tx_api.
 462              		.file 6 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\/firmware/u3p_firmware/inc/cyu3dma
 463              		.file 7 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\/firmware/u3p_firmware/inc/cyu3usb
 464              		.file 8 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\/firmware/u3p_firmware/inc/cyu3usb
DEFINED SYMBOLS
                            *ABS*:00000000 USB_Handler.c
                            *COM*:000000ac glDmaChannelHandle
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:92     .data.EventName:00000000 EventName
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:19     .rodata:00000000 $d
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:89     .data.EventName:00000000 $d
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:117    .text.USBSetupCallback:00000000 $a
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:120    .text.USBSetupCallback:00000000 USBSetupCallback
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:262    .text.USBSetupCallback:00000168 $d
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:271    .text.USBEventCallback:00000000 $a
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:274    .text.USBEventCallback:00000000 USBEventCallback
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:346    .text.USBEventCallback:00000098 $d
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:352    .text.LPMRequestCallback:00000000 $a
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:355    .text.LPMRequestCallback:00000000 LPMRequestCallback
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:391    .text.InitializeUSB:00000000 $a
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:394    .text.InitializeUSB:00000000 InitializeUSB
C:\Users\Sean\AppData\Local\Temp\ccejusSv.s:448    .text.InitializeUSB:00000070 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ApplicationIsActive
CyU3PUsbAckSetup
CyU3PUsbStall
CyU3PDmaChannelReset
CyU3PUsbFlushEp
CyU3PUsbResetEp
CyU3PDmaChannelSetXfer
CyU3PDebugPrint
StopApplication
StartApplication
CyU3PUsbStart
CheckStatus
CyU3PUsbRegisterSetupCallback
CyU3PUsbRegisterLPMRequestCallback
CyU3PUsbRegisterEventCallback
SetUSBdescriptors
CyU3PConnectState
